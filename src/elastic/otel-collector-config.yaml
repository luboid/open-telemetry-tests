# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/elasticexporter#legacy-opentelemetry-collector-exporter-for-elastic
# https://github.com/cyrille-leclerc/my-shopping-cart/blob/open-telemetry/opentelemetry-collector/opentelemetry-collector-exporter-elastic.yaml
extensions:
  zpages:
    endpoint: :55679
    
# Configure receivers
# We only need otlp protocol on grpc, but you can use http, zipkin, jaeger, aws, etc.
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver
receivers:
  otlp:
    protocols:
      grpc:

# Configure exporters
exporters:
  # log to the console
  logging:
    loglevel: info
  otlp/elastic:
    endpoint: "apm-server:8200"
    insecure: true
    #headers:
    #  Authorization: "Bearer my_secret_token"
    # endpoint: "my-deployment-14d9b0.apm.europe-west1.gcp.cloud.es.io:443"
    # headers:
    #   Authorization: "Bearer AhQ0EVyr4vxq4i5c6v"  

# Configure processors (batch, sampling, filtering, hashing sensitive data, etc.)
# https://opentelemetry.io/docs/collector/configuration/#processors
processors:
  batch:

# Configure pipelines. Pipeline defines a path the data follows in the Collector
# starting from reception, then further processing or modification and finally
# exiting the Collector via exporters.
# https://opentelemetry.io/docs/collector/configuration/#service
# https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/design.md#pipelines
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging,otlp/elastic]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging,otlp/elastic]
    logs:
      receivers: [otlp]
      processors: []
      exporters: [logging]
  extensions: [zpages]      